# Generated by Django 4.2.2 on 2024-11-04 03:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('gestionDeTaller', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre')),
                ('apellido', models.CharField(max_length=100, verbose_name='Apellido')),
                ('rol', models.CharField(choices=[('TECNICO', 'Técnico'), ('ADMINISTRATIVO', 'Administrativo'), ('GERENTE', 'Gerente')], max_length=15, verbose_name='Rol')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('fecha_modificacion', models.DateTimeField(auto_now=True, verbose_name='Última Modificación')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'ordering': ['apellido', 'nombre'],
            },
        ),
        migrations.CreateModel(
            name='CertificacionJD',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200, verbose_name='Nombre del Curso')),
                ('codigo_curso', models.CharField(max_length=50, verbose_name='Código JD')),
                ('level', models.CharField(choices=[('LEVEL1', 'Level 1'), ('LEVEL2', 'Level 2'), ('LEVEL3', 'Level 3')], max_length=10)),
                ('descripcion', models.TextField(verbose_name='Descripción')),
                ('activo', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='CertificacionTecnico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_obtencion', models.DateField()),
                ('fecha_vencimiento', models.DateField(blank=True, null=True)),
                ('certificado_url', models.URLField(blank=True)),
                ('nota_final', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('observaciones', models.TextField(blank=True)),
                ('certificacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recursosHumanos.certificacionjd')),
                ('tecnico', models.ForeignKey(limit_choices_to={'rol': 'TECNICO'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-fecha_obtencion'],
            },
        ),
        migrations.CreateModel(
            name='Ciudad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre')),
                ('activo', models.BooleanField(default=True, verbose_name='Activo')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('fecha_modificacion', models.DateTimeField(auto_now=True, verbose_name='Última Modificación')),
            ],
            options={
                'verbose_name': 'Ciudad',
            },
        ),
        migrations.CreateModel(
            name='Competencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre')),
                ('descripcion', models.TextField(verbose_name='Descripción')),
                ('activo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Competencia',
                'verbose_name_plural': 'Competencias',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='HerramientaEspecial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=50, unique=True, verbose_name='Código')),
                ('nombre', models.CharField(max_length=200, verbose_name='Nombre')),
                ('descripcion', models.TextField(verbose_name='Descripción')),
                ('foto', models.ImageField(blank=True, upload_to='herramientas/')),
                ('ubicacion', models.CharField(choices=[('EST_JD01', 'Estante JD01'), ('EST_JD02', 'Estante JD02'), ('EST_JD03', 'Estante JD03'), ('EST_JD04', 'Estante JD04'), ('EST_JD05', 'Estante JD05'), ('EST_JD06', 'Estante JD06')], max_length=10)),
                ('estante', models.CharField(max_length=10, verbose_name='Número de Estante')),
                ('disponible', models.BooleanField(default=True)),
                ('observaciones', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Herramienta Especial',
                'verbose_name_plural': 'Herramientas Especiales',
                'ordering': ['codigo'],
            },
        ),
        migrations.CreateModel(
            name='Provincia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre')),
                ('activo', models.BooleanField(default=True, verbose_name='Activo')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('fecha_modificacion', models.DateTimeField(auto_now=True, verbose_name='Última Modificación')),
            ],
            options={
                'verbose_name': 'Provincia',
                'verbose_name_plural': 'Provincias',
            },
        ),
        migrations.CreateModel(
            name='TarifaManoObra',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('INDIVIDUAL', 'Técnico Individual'), ('MULTIPLE', 'Múltiples Técnicos')], max_length=20)),
                ('valor_hora', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor Hora')),
                ('fecha_vigencia', models.DateField(verbose_name='Fecha de Vigencia')),
                ('activo', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['-fecha_vigencia'],
            },
        ),
        migrations.CreateModel(
            name='TipoHoraTrabajo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre')),
                ('categoria', models.CharField(choices=[('PRODUCTIVA', 'Horas Productivas'), ('NO_PRODUCTIVA', 'Horas No Productivas'), ('AUSENCIA', 'Ausencias')], max_length=20)),
                ('descripcion', models.TextField(blank=True)),
                ('activo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Tipo de Hora',
                'verbose_name_plural': 'Tipos de Horas',
            },
        ),
        migrations.CreateModel(
            name='Sucursal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre')),
                ('direccion', models.CharField(max_length=200, verbose_name='Dirección')),
                ('activo', models.BooleanField(default=True, verbose_name='Activo')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('fecha_modificacion', models.DateTimeField(auto_now=True, verbose_name='Última Modificación')),
                ('ciudad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recursosHumanos.ciudad', verbose_name='Ciudad')),
                ('provincia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recursosHumanos.provincia', verbose_name='Provincia')),
            ],
            options={
                'verbose_name': 'Sucursal',
                'verbose_name_plural': 'Sucursales',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='RevisionHerramientas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_revision', models.DateField(verbose_name='Fecha de Revisión')),
                ('fecha_proxima_revision', models.DateField(verbose_name='Próxima Revisión')),
                ('caja_herramientas', models.CharField(choices=[('OK', 'Correcto'), ('REPARAR', 'Necesita Reparación'), ('REEMPLAZAR', 'Necesita Reemplazo'), ('NO_TIENE', 'No Posee')], max_length=10)),
                ('llaves_impacto', models.CharField(blank=True, choices=[('OK', 'Correcto'), ('REPARAR', 'Necesita Reparación'), ('REEMPLAZAR', 'Necesita Reemplazo'), ('NO_TIENE', 'No Posee')], max_length=10)),
                ('multimetro', models.CharField(blank=True, choices=[('OK', 'Correcto'), ('REPARAR', 'Necesita Reparación'), ('REEMPLAZAR', 'Necesita Reemplazo'), ('NO_TIENE', 'No Posee')], max_length=10)),
                ('manometros', models.CharField(blank=True, choices=[('OK', 'Correcto'), ('REPARAR', 'Necesita Reparación'), ('REEMPLAZAR', 'Necesita Reemplazo'), ('NO_TIENE', 'No Posee')], max_length=10)),
                ('laptop', models.CharField(blank=True, choices=[('OK', 'Correcto'), ('REPARAR', 'Necesita Reparación'), ('REEMPLAZAR', 'Necesita Reemplazo'), ('NO_TIENE', 'No Posee')], max_length=10)),
                ('service_advisor', models.CharField(blank=True, choices=[('OK', 'Correcto'), ('REPARAR', 'Necesita Reparación'), ('REEMPLAZAR', 'Necesita Reemplazo'), ('NO_TIENE', 'No Posee')], max_length=10)),
                ('observaciones', models.TextField(blank=True)),
                ('revisor', models.ForeignKey(limit_choices_to={'rol': 'ADMINISTRATIVO'}, on_delete=django.db.models.deletion.CASCADE, related_name='herramientas_revisadas', to=settings.AUTH_USER_MODEL)),
                ('tecnico', models.ForeignKey(limit_choices_to={'rol': 'TECNICO'}, on_delete=django.db.models.deletion.CASCADE, related_name='revisiones_herramientas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Revisión de Herramientas',
                'verbose_name_plural': 'Revisiones de Herramientas',
                'ordering': ['-fecha_revision'],
            },
        ),
        migrations.CreateModel(
            name='RegistroHorasTecnico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField(verbose_name='Fecha')),
                ('hora_inicio', models.TimeField(verbose_name='Hora Inicio')),
                ('hora_fin', models.TimeField(verbose_name='Hora Fin')),
                ('descripcion', models.TextField(verbose_name='Descripción de la Actividad')),
                ('aprobado', models.BooleanField(default=False)),
                ('fecha_aprobacion', models.DateTimeField(blank=True, null=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_modificacion', models.DateTimeField(auto_now=True)),
                ('aprobado_por', models.ForeignKey(limit_choices_to={'rol': 'GERENTE'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='horas_aprobadas', to=settings.AUTH_USER_MODEL)),
                ('servicio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='gestionDeTaller.servicio')),
                ('tecnico', models.ForeignKey(limit_choices_to={'rol': 'TECNICO'}, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('tipo_hora', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='recursosHumanos.tipohoratrabajo')),
            ],
            options={
                'verbose_name': 'Registro de Horas',
                'verbose_name_plural': 'Registros de Horas',
                'ordering': ['-fecha', '-hora_inicio'],
            },
        ),
        migrations.CreateModel(
            name='PrestamoHerramienta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_retiro', models.DateTimeField(auto_now_add=True)),
                ('fecha_devolucion', models.DateTimeField(blank=True, null=True)),
                ('estado_salida', models.TextField(blank=True, verbose_name='Estado al Retirar')),
                ('estado_devolucion', models.TextField(blank=True, verbose_name='Estado al Devolver')),
                ('observaciones', models.TextField(blank=True)),
                ('herramienta', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='recursosHumanos.herramientaespecial')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Préstamo de Herramienta',
                'verbose_name_plural': 'Préstamos de Herramientas',
                'ordering': ['-fecha_retiro'],
            },
        ),
        migrations.CreateModel(
            name='EvaluacionSistema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_evaluacion', models.DateField(verbose_name='Fecha de Evaluación')),
                ('windows_activado', models.CharField(choices=[('OK', 'Correcto'), ('PENDIENTE', 'Pendiente'), ('NO_APLICA', 'No Aplica')], max_length=10)),
                ('windows_actualizado', models.CharField(choices=[('OK', 'Correcto'), ('PENDIENTE', 'Pendiente'), ('NO_APLICA', 'No Aplica')], max_length=10)),
                ('antivirus_activo', models.CharField(choices=[('OK', 'Correcto'), ('PENDIENTE', 'Pendiente'), ('NO_APLICA', 'No Aplica')], max_length=10)),
                ('jd_sistemas_actualizados', models.CharField(choices=[('OK', 'Correcto'), ('PENDIENTE', 'Pendiente'), ('NO_APLICA', 'No Aplica')], max_length=10)),
                ('office_activado', models.CharField(choices=[('OK', 'Correcto'), ('PENDIENTE', 'Pendiente'), ('NO_APLICA', 'No Aplica')], max_length=10)),
                ('espacio_disco', models.CharField(choices=[('OK', 'Correcto'), ('PENDIENTE', 'Pendiente'), ('NO_APLICA', 'No Aplica')], max_length=10)),
                ('memoria_ram', models.CharField(choices=[('OK', 'Correcto'), ('PENDIENTE', 'Pendiente'), ('NO_APLICA', 'No Aplica')], max_length=10)),
                ('observaciones', models.TextField(blank=True)),
                ('fecha_proxima_revision', models.DateField()),
                ('evaluador', models.ForeignKey(limit_choices_to={'rol': 'GERENTE'}, on_delete=django.db.models.deletion.CASCADE, related_name='sistemas_evaluados', to=settings.AUTH_USER_MODEL)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluaciones_sistema', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Evaluación de Sistema',
                'verbose_name_plural': 'Evaluaciones de Sistemas',
                'ordering': ['-fecha_evaluacion'],
            },
        ),
        migrations.AddField(
            model_name='usuario',
            name='sucursal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recursosHumanos.sucursal', verbose_name='Sucursal'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='tarifa_individual',
            field=models.ForeignKey(blank=True, limit_choices_to={'tipo': 'INDIVIDUAL'}, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='tecnicos', to='recursosHumanos.tarifamanoobra'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='CompetenciaTecnico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nivel', models.CharField(choices=[('BASICO', 'Básico'), ('INTERMEDIO', 'Intermedio'), ('AVANZADO', 'Avanzado'), ('EXPERTO', 'Experto')], max_length=15)),
                ('fecha_evaluacion', models.DateField(verbose_name='Fecha de Evaluación')),
                ('nivel_jd', models.CharField(blank=True, choices=[('LEVEL1', 'Level 1'), ('LEVEL2', 'Level 2'), ('LEVEL3', 'Level 3')], max_length=10, verbose_name='Nivel JD')),
                ('observaciones', models.TextField(blank=True)),
                ('fecha_proxima_evaluacion', models.DateField(blank=True, null=True)),
                ('activo', models.BooleanField(default=True)),
                ('certificaciones', models.ManyToManyField(blank=True, to='recursosHumanos.certificaciontecnico')),
                ('competencia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recursosHumanos.competencia')),
                ('evaluador', models.ForeignKey(limit_choices_to={'rol': 'GERENTE'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='evaluaciones_realizadas', to=settings.AUTH_USER_MODEL)),
                ('tecnico', models.ForeignKey(limit_choices_to={'rol': 'TECNICO'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Competencia de Técnico',
                'verbose_name_plural': 'Competencias de Técnicos',
                'ordering': ['tecnico', 'competencia'],
                'unique_together': {('tecnico', 'competencia')},
            },
        ),
    ]
