# Generated by Django 4.2.2 on 2025-06-27 13:01

from django.db import migrations, models


def migrate_tipo_clasificacion_to_clasificacion(apps, schema_editor):
    """Migrar datos del campo tipo_clasificacion al nuevo campo clasificacion"""
    LeadJohnDeere = apps.get_model('centroSoluciones', 'LeadJohnDeere')
    
    # Mapeo de valores antiguos a nuevos
    mapping = {
        'John Deere Protect': 'JOHN_DEERE_PROTECT',
        'Mtto Preventivo': 'MTTO_PREVENTIVO',
        'PIP': 'PIP',
        'Reforma de componentes': 'REFORMA_COMPONENTES',
        'Dientes / Cuchillas': 'DIENTES_CUCHILLAS',
        'Tren rodante': 'TREN_RODANTE',
        'Garantia Basica': 'GARANTIA_BASICA',
        'Garantia Extendida': 'GARANTIA_EXTENDIDA',
        'Disponibilidad': 'DISPONIBILIDAD',
        'Reconexion': 'RECONEXION',
        'Otros': 'OTROS',
    }
    
    # Actualizar registros existentes
    for lead in LeadJohnDeere.objects.all():
        old_value = getattr(lead, 'tipo_clasificacion', None)
        if old_value:
            new_value = mapping.get(old_value, 'OTROS')
            lead.clasificacion = new_value
            lead.save(update_fields=['clasificacion'])
        else:
            # Si no hay valor, asignar 'OTROS' por defecto
            lead.clasificacion = 'OTROS'
            lead.save(update_fields=['clasificacion'])


def reverse_migrate_clasificacion_to_tipo_clasificacion(apps, schema_editor):
    """Revertir la migración si es necesario"""
    LeadJohnDeere = apps.get_model('centroSoluciones', 'LeadJohnDeere')
    
    # Mapeo inverso
    reverse_mapping = {
        'JOHN_DEERE_PROTECT': 'John Deere Protect',
        'MTTO_PREVENTIVO': 'Mtto Preventivo',
        'PIP': 'PIP',
        'REFORMA_COMPONENTES': 'Reforma de componentes',
        'DIENTES_CUCHILLAS': 'Dientes / Cuchillas',
        'TREN_RODANTE': 'Tren rodante',
        'GARANTIA_BASICA': 'Garantia Basica',
        'GARANTIA_EXTENDIDA': 'Garantia Extendida',
        'DISPONIBILIDAD': 'Disponibilidad',
        'RECONEXION': 'Reconexion',
        'OTROS': 'Otros',
    }
    
    for lead in LeadJohnDeere.objects.all():
        new_value = lead.clasificacion
        old_value = reverse_mapping.get(new_value, 'Otros')
        lead.tipo_clasificacion = old_value
        lead.save(update_fields=['tipo_clasificacion'])


class Migration(migrations.Migration):

    dependencies = [
        ('centroSoluciones', '0001_initial'),
    ]

    operations = [
        # 1. Agregar el nuevo campo como nullable
        migrations.AddField(
            model_name='leadjohndeere',
            name='clasificacion',
            field=models.CharField(
                choices=[
                    ('JOHN_DEERE_PROTECT', 'John Deere Protect'),
                    ('MTTO_PREVENTIVO', 'Mtto Preventivo'),
                    ('PIP', 'PIP'),
                    ('REFORMA_COMPONENTES', 'Reforma de componentes'),
                    ('DIENTES_CUCHILLAS', 'Dientes / Cuchillas'),
                    ('TREN_RODANTE', 'Tren rodante'),
                    ('GARANTIA_BASICA', 'Garantía Básica'),
                    ('GARANTIA_EXTENDIDA', 'Garantía Extendida'),
                    ('DISPONIBILIDAD', 'Disponibilidad'),
                    ('RECONEXION', 'Reconexión'),
                    ('OTROS', 'Otros'),
                ],
                help_text='Tipo de servicio o producto solicitado',
                max_length=25,
                null=True,
                verbose_name='Clasificación',
            ),
        ),
        
        # 2. Migrar datos
        migrations.RunPython(
            migrate_tipo_clasificacion_to_clasificacion,
            reverse_migrate_clasificacion_to_tipo_clasificacion,
        ),
        
        # 3. Hacer el campo no nullable
        migrations.AlterField(
            model_name='leadjohndeere',
            name='clasificacion',
            field=models.CharField(
                choices=[
                    ('JOHN_DEERE_PROTECT', 'John Deere Protect'),
                    ('MTTO_PREVENTIVO', 'Mtto Preventivo'),
                    ('PIP', 'PIP'),
                    ('REFORMA_COMPONENTES', 'Reforma de componentes'),
                    ('DIENTES_CUCHILLAS', 'Dientes / Cuchillas'),
                    ('TREN_RODANTE', 'Tren rodante'),
                    ('GARANTIA_BASICA', 'Garantía Básica'),
                    ('GARANTIA_EXTENDIDA', 'Garantía Extendida'),
                    ('DISPONIBILIDAD', 'Disponibilidad'),
                    ('RECONEXION', 'Reconexión'),
                    ('OTROS', 'Otros'),
                ],
                help_text='Tipo de servicio o producto solicitado',
                max_length=25,
                verbose_name='Clasificación',
            ),
        ),
        
        # 4. Eliminar el campo antiguo
        migrations.RemoveField(
            model_name='leadjohndeere',
            name='tipo_clasificacion',
        ),
        
        # 5. Agregar índice para el nuevo campo
        migrations.AddIndex(
            model_name='leadjohndeere',
            index=models.Index(fields=['clasificacion', 'estado'], name='centroSoluc_clasifi_123456_idx'),
        ),
    ]
